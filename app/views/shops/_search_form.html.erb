<div class="card w-96 bg-base-100 shadow-xl mt-5 mb-5">
  <div class="card-body">
    <button class="text-xl"><%= rodging.address %>周辺で検索</button>
    <div id='map' style="width:325px; height:300px" class="mt-3 mb-3"></div>
    <input type="text" placeholder="お菓子など" autofocus=true id="search" class="input w-full max-w-xs bg-white" />
    <button class='btn btn-active' onClick="SearchGo()">検索</button>
  </div>
</div>

<script>
  function initMap(){
    // 地図の位置情報(緯度・経度)を取得
    let mapPosition = {lat: <%= rodging.latitude %> , lng: <%= rodging.longitude %> };
    let map = new google.maps.Map(document.getElementById('map'), {
      zoom: 15,
      center: mapPosition
    });
    let transitLayer = new google.maps.TransitLayer();
    transitLayer.setMap(map);

    let contentString = '【宿泊先名】<%= rodging.address %>';
    let infowindow = new google.maps.InfoWindow({
      content: contentString
    });

    let marker = new google.maps.Marker({
      position: mapPosition,
      map: map,
      title: contentString
    });

    marker.addListener('click', function(){
      infowindow.open(map, marker);
    });
  }

  function SearchGo(){
    let initPos = {lat: <%= rodging.latitude %>, lng: <%= rodging.longitude %>};
    let mapOptions = {
        center: initPos,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    // #map要素にMapクラスの新しいインスタンスを作成
    myMap = new google.maps.Map(document.getElementById("map"), mapOptions);
    service = new google.maps.places.PlacesService(myMap);
    // input要素に入力されたキーワードを検索の条件に設定
    let myword = document.getElementById("search");
    let request = {
        query: myword.value,
        location: myMap.getCenter()
    };
    service.textSearch(request, result_search);
  }
  
  // 検索の結果を受け取る
  function result_search(results) {
    let bounds = new google.maps.LatLngBounds();
    let contentButton = '<br><a class="btn btn-outline btn-success btn-sm mt-1" href="javascript:submitForm()" tabindex="0">保存</a>';
    for(let i = 0; i < results.length; i++){
      createMarker({ //createMarker関数を呼び出している
        position: results[i].geometry.location,
        text: `<a href="https://www.google.com/search?q=${results[i].name}" tabindex="0" id='shop_name' value='${results[i].name}'>${results[i].name}</a>`,
        button: contentButton,
        map: myMap
      });
      bounds.extend(results[i].geometry.location);
    }
    myMap.fitBounds(bounds);
  }
  
  // 該当する位置にマーカーを表示
  function createMarker(options) {
    // マップ情報を保持しているmyMapオブジェクトを指定
    options.map = myMap;
    // Markcrクラスのオブジェクトmarkerを作成
    let marker = new google.maps.Marker(options);
    // 各施設の吹き出し(情報ウインドウ)に表示させる処理
    let infoWnd = new google.maps.InfoWindow();
    infoWnd.setContent(options.text + options.button);
    // addListenerメソッドを使ってイベントリスナーを登録
    google.maps.event.addListener(marker, 'click', function(){
      infoWnd.open(myMap, marker);
    });
    return marker;
  }

  function submitForm(){
    let shop_name = document.getElementById('shop_name');
    let value = shop_name.getAttribute('value');
    let form = document.createElement('form');
    document.body.appendChild(form);
    let input = document.createElement('input');
    input.setAttribute('type','hidden');
    input.setAttribute('name','shop[address]');
    input.setAttribute('value',value);
    form.appendChild(input);
    form.setAttribute('action',`/rodgings/<%= rodging.id %>/shops`);
    form.setAttribute('method','post');
    form.submit();
  }
</script>
